{"version":3,"names":["WatchFilterPlugin","constructor","filter","debug","apply","compiler","hooks","afterEnvironment","tap","watchFileSystem","IgnoringWatchFileSystem","exports","wfs","watch","files","dirs","missing","startTime","options","callback","callbackUndelayed","includedFiles","includedDirs","excludedFiles","excludedDirs","separate","enabled","stringifyList","error","filesModified","dirsModified","missingModified","fileTimestamps","dirTimestamps","p","list","included","excluded","file","push","map","it","startsWith","process","cwd","substring","length","join"],"sources":["../../src/plugins/WatchMatchPlugin.ts"],"sourcesContent":["import { Compiler } from \"webpack\"\r\n\r\nexport class WatchFilterPlugin {\r\n  constructor(private readonly filter: WatchFileSystemFilter, private readonly debug: any) {\r\n  }\r\n\r\n  apply(compiler: Compiler) {\r\n    compiler.hooks.afterEnvironment.tap(\"WatchFilterPlugin\", () => {\r\n      (compiler as any).watchFileSystem = new IgnoringWatchFileSystem((compiler as any).watchFileSystem, this.filter, this.debug)\r\n    })\r\n  }\r\n}\r\n\r\ninterface WatchFileSystem {\r\n  watch(files: Array<string>, dirs: Array<string>, missing: Array<string>, startTime: number, options: any, callback: WatchFileSystemCallback, callbackUndelayed: () => void): void\r\n}\r\n\r\n// include or not\r\nexport type WatchFileSystemFilter = (file: string) => boolean\r\n\r\nexport type WatchFileSystemCallback = (error: Error | null, filesModified?: Array<string>, dirsModified?: Array<string>, missingModified?: Array<string>, fileTimestamps?: { [key: string]: number }, dirTimestamps?: { [key: string]: number }) => void\r\n\r\nclass IgnoringWatchFileSystem {\r\n  constructor(private readonly wfs: WatchFileSystem, private readonly filter: WatchFileSystemFilter, private readonly debug: any) {\r\n  }\r\n\r\n  watch(files: Array<string>, dirs: Array<string>, missing: Array<string>, startTime: number, options: any, callback: WatchFileSystemCallback, callbackUndelayed: () => void) {\r\n    const includedFiles: Array<string> = []\r\n    const includedDirs: Array<string> = []\r\n    const excludedFiles: Array<string> = []\r\n    const excludedDirs: Array<string> = []\r\n    separate(this.filter, files, includedFiles, excludedFiles)\r\n    separate(this.filter, dirs, includedDirs, excludedDirs)\r\n\r\n    if (this.debug.enabled) {\r\n      this.debug(`files:${stringifyList(files)}\\ndirs:${stringifyList(dirs)}\\nmissing:${stringifyList(missing)}`)\r\n      this.debug(`includedFiles:${stringifyList(includedFiles)}\\nincludedDirs:${stringifyList(includedDirs)}\\nexcludedFiles:${stringifyList(excludedFiles)}\\nexcludedDirs:${stringifyList(excludedDirs)}`)\r\n    }\r\n\r\n    return this.wfs.watch(includedFiles, includedDirs, missing, startTime, options, (error, filesModified, dirsModified, missingModified, fileTimestamps, dirTimestamps) => {\r\n      if (error != null) {\r\n        callback(error)\r\n        return\r\n      }\r\n\r\n      for (const p of excludedFiles) {\r\n        fileTimestamps![p] = 1\r\n      }\r\n\r\n      for (const p of excludedDirs) {\r\n        dirTimestamps![p] = 1\r\n      }\r\n\r\n      callback(null, filesModified, dirsModified, missingModified, fileTimestamps, dirTimestamps)\r\n    }, callbackUndelayed)\r\n  }\r\n}\r\n\r\nfunction separate(filter: WatchFileSystemFilter, list: Array<string>, included: Array<string>, excluded: Array<string>) {\r\n  for (const file of list) {\r\n    (filter(file) ? included : excluded).push(file)\r\n  }\r\n}\r\n\r\nfunction stringifyList(list: Array<string>) {\r\n  return `\\n  ${list.map(it => it.startsWith(process.cwd()) ? it.substring(process.cwd().length + 1) : it).join(\",\\n  \")}`\r\n}"],"mappings":"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"}
