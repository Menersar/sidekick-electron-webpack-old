{"version":3,"names":["BluebirdPromise","data","_interopRequireWildcard","require","_chalk","_interopRequireDefault","_child_process","_fsExtra","path","_webpack","_config","_HmrServer","_main","_util","_devUtil","_WebpackDevServerManager","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","projectDir","process","cwd","socketPath","debug","getOutDir","electronWebpackConfig","getElectronWebpackConfiguration","packageMetadata","getPackageMetadata","join","commonDistDirectory","emptyMainOutput","outDir","files","orNullIfFileNotExist","readdir","map","filter","it","startsWith","remove","sep","DevRunner","start","wdsHost","wdsPort","getFreePort","env","assign","getCommonEnv","ELECTRON_WEBPACK_WDS_HOST","ELECTRON_WEBPACK_WDS_PORT","hmrServer","HmrServer","Promise","all","startRenderer","listen","then","startMainCompilation","ipc","on","error","logError","electronArgs","ELECTRON_ARGS","args","length","JSON","parse","push","argv","slice","startElectron","mainConfig","configure","production","autoClean","forkTsCheckerLogger","info","warn","message","logProcess","chalk","yellow","red","resolve","reject","compiler","webpack","printCompilingMessage","DelayedFunction","hooks","compile","tap","beforeCompile","schedule","watcher","watch","stats","cancel","toString","colors","built","callback","w","close","main","devRunner","catch","console","electronProcess","spawn","ELECTRON_HMR_SOCKET_PATH","kill","queuedData","stdout","trim","blue","logProcessErrorOutput","exitCode","setImmediate","emit"],"sources":["../../src/dev/dev-runner.ts"],"sourcesContent":["import * as BluebirdPromise from \"bluebird\"\r\nimport chalk from \"chalk\"\r\nimport { spawn } from \"child_process\"\r\nimport { readdir, remove } from \"fs-extra\"\r\nimport * as path from \"path\"\r\nimport \"source-map-support/register\"\r\nimport webpack, { Compiler } from \"webpack\"\r\nimport { getElectronWebpackConfiguration, getPackageMetadata } from \"../config\"\r\nimport { HmrServer } from \"../electron-main-hmr/HmrServer\"\r\nimport { configure } from \"../main\"\r\nimport { getFreePort, orNullIfFileNotExist } from \"../util\"\r\nimport { DelayedFunction, getCommonEnv, logError, logProcess, logProcessErrorOutput } from \"./devUtil\"\r\nimport { startRenderer } from \"./WebpackDevServerManager\"\r\n\r\nconst projectDir = process.cwd()\r\n\r\nlet socketPath: string | null = null\r\n\r\nconst debug = require(\"debug\")(\"electron-webpack\")\r\n\r\nasync function getOutDir() {\r\n  const electronWebpackConfig = await getElectronWebpackConfiguration({\r\n    projectDir,\r\n    packageMetadata: getPackageMetadata(projectDir),\r\n  })\r\n  return path.join(electronWebpackConfig.commonDistDirectory!!, \"main\")\r\n}\r\n\r\n// do not remove main.js to allow IDE to keep breakpoints\r\nasync function emptyMainOutput() {\r\n  const outDir = await getOutDir()\r\n  const files = await orNullIfFileNotExist(readdir(outDir))\r\n  if (files == null) {\r\n    return\r\n  }\r\n\r\n  await BluebirdPromise.map(files.filter(it => !it.startsWith(\".\") && it !== \"main.js\"), it => remove(outDir + path.sep + it))\r\n}\r\n\r\nclass DevRunner {\r\n  async start() {\r\n    const wdsHost = \"localhost\"\r\n    const wdsPort = await getFreePort(wdsHost, 9080)\r\n    const env = {\r\n      ...getCommonEnv(),\r\n      ELECTRON_WEBPACK_WDS_HOST: wdsHost,\r\n      ELECTRON_WEBPACK_WDS_PORT: wdsPort,\r\n    }\r\n\r\n    const hmrServer = new HmrServer()\r\n    await Promise.all([\r\n      startRenderer(projectDir, env),\r\n      hmrServer.listen()\r\n        .then(it => {\r\n          socketPath = it\r\n        }),\r\n      emptyMainOutput()\r\n        .then(() => this.startMainCompilation(hmrServer)),\r\n    ])\r\n\r\n    hmrServer.ipc.on(\"error\", (error: Error) => {\r\n      logError(\"Main\", error)\r\n    })\r\n\r\n    const electronArgs = process.env.ELECTRON_ARGS\r\n    const outDir = await getOutDir()\r\n    const args = electronArgs != null && electronArgs.length > 0 ? JSON.parse(electronArgs) : [`--inspect=${await getFreePort(\"127.0.0.1\", 5858)}`]\r\n    args.push(path.join(outDir, \"/main.js\"))\r\n    // Pass remaining arguments to the application. Remove 3 instead of 2, to remove the `dev` argument as well.\r\n    args.push(...process.argv.slice(3))\r\n    // we should start only when both start and main are started\r\n    startElectron(args, env)\r\n  }\r\n\r\n  async startMainCompilation(hmrServer: HmrServer) {\r\n    const mainConfig = await configure(\"main\", {\r\n      production: false,\r\n      autoClean: false,\r\n      forkTsCheckerLogger: {\r\n        info: () => {\r\n          // ignore\r\n        },\r\n\r\n        warn: (message: string) => {\r\n          logProcess(\"Main\", message, chalk.yellow)\r\n        },\r\n\r\n        error: (message: string) => {\r\n          logProcess(\"Main\", message, chalk.red)\r\n        },\r\n      },\r\n    })\r\n\r\n    await new Promise((resolve: (() => void) | null, reject: ((error: Error) => void) | null) => {\r\n      const compiler: Compiler = webpack(mainConfig!!)\r\n\r\n      const printCompilingMessage = new DelayedFunction(() => {\r\n        logProcess(\"Main\", \"Compiling...\", chalk.yellow)\r\n      })\r\n      compiler.hooks.compile.tap(\"electron-webpack-dev-runner\", () => {\r\n        hmrServer.beforeCompile()\r\n        printCompilingMessage.schedule()\r\n      })\r\n\r\n      let watcher: Compiler.Watching | null = compiler.watch({}, (error, stats) => {\r\n        printCompilingMessage.cancel()\r\n\r\n        if (watcher == null) {\r\n          return\r\n        }\r\n\r\n        if (error != null) {\r\n          if (reject == null) {\r\n            logError(\"Main\", error)\r\n          }\r\n          else {\r\n            reject(error)\r\n            reject = null\r\n          }\r\n          return\r\n        }\r\n\r\n        logProcess(\"Main\", stats.toString({\r\n          colors: true,\r\n        }), chalk.yellow)\r\n\r\n        if (resolve != null) {\r\n          resolve()\r\n          resolve = null\r\n          return\r\n        }\r\n\r\n        hmrServer.built(stats)\r\n      })\r\n\r\n      require(\"async-exit-hook\")((callback: () => void) => {\r\n        debug(`async-exit-hook: ${callback == null}`)\r\n        const w = watcher\r\n        if (w == null) {\r\n          return\r\n        }\r\n\r\n        watcher = null\r\n        w.close(() => callback())\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nasync function main() {\r\n  const devRunner = new DevRunner()\r\n  await devRunner.start()\r\n}\r\n\r\nmain()\r\n  .catch(error => {\r\n    console.error(error)\r\n  })\r\n\r\nfunction startElectron(electronArgs: Array<string>, env: any) {\r\n  const electronProcess = spawn(require(\"electron\").toString(), electronArgs, {\r\n    env: {\r\n      ...env,\r\n      ELECTRON_HMR_SOCKET_PATH: socketPath,\r\n    }\r\n  })\r\n\r\n  // required on windows\r\n  require(\"async-exit-hook\")(() => {\r\n    electronProcess.kill(\"SIGINT\")\r\n  })\r\n\r\n  let queuedData: string | null = null\r\n  electronProcess.stdout.on(\"data\", data => {\r\n    data = data.toString()\r\n    // do not print the only line - doesn't make sense\r\n    if (data.trim() === \"[HMR] Updated modules:\") {\r\n      queuedData = data\r\n      return\r\n    }\r\n\r\n    if (queuedData != null) {\r\n      data = queuedData + data\r\n      queuedData = null\r\n    }\r\n\r\n    logProcess(\"Electron\", data, chalk.blue)\r\n  })\r\n\r\n  logProcessErrorOutput(\"Electron\", electronProcess)\r\n\r\n  electronProcess.on(\"close\", exitCode => {\r\n    debug(`Electron exited with exit code ${exitCode}`)\r\n    if (exitCode === 100) {\r\n      setImmediate(() => {\r\n        startElectron(electronArgs, env)\r\n      })\r\n    }\r\n    else {\r\n      (process as any).emit(\"message\", \"shutdown\")\r\n    }\r\n  })\r\n}\r\n"],"mappings":"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"}
